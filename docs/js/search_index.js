var search_data = {"index":{"searchIndex":["nanook","account","block","error","key","node","rpc","util","wallet","walletaccount","workpeer","nano_to_raw()","account()","account()","account()","accounts()","add()","all()","balance()","balance()","block()","block_count()","block_count_type()","bootstrap()","bootstrap_any()","call()","cancel_work()","chain()","change_password()","clear()","coerce_empty_string_to_type()","contains?()","create()","create()","delegators()","destroy()","destroy()","exists?()","export()","frontier_count()","generate()","generate_work()","history()","history()","info()","info()","info()","is_valid_work?()","key()","ledger()","list()","locked?()","method_missing()","new()","new()","new()","new()","new()","new()","new()","new()","new()","node()","pay()","pay()","peers()","pending()","pending?()","process()","public_key()","receive()","receive()","representative()","representatives()","republish()","stop()","successors()","sync_progress()","synced?()","unlock()","version()","wallet()","weight()","work_peers()","readme"],"longSearchIndex":["nanook","nanook::account","nanook::block","nanook::error","nanook::key","nanook::node","nanook::rpc","nanook::util","nanook::wallet","nanook::walletaccount","nanook::workpeer","nanook::util::nano_to_raw()","nanook#account()","nanook::block#account()","nanook::wallet#account()","nanook::wallet#accounts()","nanook::workpeer#add()","nanook::wallet#all()","nanook::account#balance()","nanook::wallet#balance()","nanook#block()","nanook::node#block_count()","nanook::node#block_count_type()","nanook::node#bootstrap()","nanook::node#bootstrap_any()","nanook::rpc#call()","nanook::block#cancel_work()","nanook::block#chain()","nanook::wallet#change_password()","nanook::workpeer#clear()","nanook::util::coerce_empty_string_to_type()","nanook::wallet#contains?()","nanook::wallet#create()","nanook::walletaccount#create()","nanook::account#delegators()","nanook::wallet#destroy()","nanook::walletaccount#destroy()","nanook::account#exists?()","nanook::wallet#export()","nanook::node#frontier_count()","nanook::key#generate()","nanook::block#generate_work()","nanook::account#history()","nanook::block#history()","nanook::account#info()","nanook::block#info()","nanook::key#info()","nanook::block#is_valid_work?()","nanook#key()","nanook::account#ledger()","nanook::workpeer#list()","nanook::wallet#locked?()","nanook::walletaccount#method_missing()","nanook::new()","nanook::account::new()","nanook::block::new()","nanook::key::new()","nanook::node::new()","nanook::rpc::new()","nanook::wallet::new()","nanook::walletaccount::new()","nanook::workpeer::new()","nanook#node()","nanook::wallet#pay()","nanook::walletaccount#pay()","nanook::node#peers()","nanook::account#pending()","nanook::block#pending?()","nanook::block#process()","nanook::account#public_key()","nanook::wallet#receive()","nanook::walletaccount#receive()","nanook::account#representative()","nanook::node#representatives()","nanook::block#republish()","nanook::node#stop()","nanook::block#successors()","nanook::node#sync_progress()","nanook::node#synced?()","nanook::wallet#unlock()","nanook::node#version()","nanook#wallet()","nanook::account#weight()","nanook#work_peers()",""],"info":[["Nanook","","classes/Nanook.html","","<p>The <code>Nanook</code> class allow\n<p>Initializing\n<p>Connect to the default RPC host at localhost:7076 and with a timeout …\n"],["Nanook::Account","","classes/Nanook/Account.html","","<p>The <code>Nanook::Account</code> class contains methods to discover\npublicly-available information about accounts …\n"],["Nanook::Block","","classes/Nanook/Block.html","","<p>The <code>Nanook::Block</code> class contains methods to discover\npublicly-available information about blocks on the …\n"],["Nanook::Error","","classes/Nanook/Error.html","",""],["Nanook::Key","","classes/Nanook/Key.html","",""],["Nanook::Node","","classes/Nanook/Node.html","",""],["Nanook::Rpc","","classes/Nanook/Rpc.html","",""],["Nanook::Util","","classes/Nanook/Util.html","",""],["Nanook::Wallet","","classes/Nanook/Wallet.html","",""],["Nanook::WalletAccount","","classes/Nanook/WalletAccount.html","",""],["Nanook::WorkPeer","","classes/Nanook/WorkPeer.html","",""],["NANO_to_raw","Nanook::Util","classes/Nanook/Util.html#method-c-NANO_to_raw","(nano)",""],["account","Nanook","classes/Nanook.html#method-i-account","(account=nil)","<p>Returns a Nanook::Account instance.\n\n<pre><code>nanook = Nanook.new\n\naccount = nanook.account\naccount = nanook.account(&quot;xrb_3e3j5tkog48pnny9dmfzj1r16pg8t1e76dz5tmac6iq689wyjfpi00000000&quot;)\n</code></pre>\n"],["account","Nanook::Block","classes/Nanook/Block.html#method-i-account","()",""],["account","Nanook::Wallet","classes/Nanook/Wallet.html#method-i-account","(account=nil)",""],["accounts","Nanook::Wallet","classes/Nanook/Wallet.html#method-i-accounts","()",""],["add","Nanook::WorkPeer","classes/Nanook/WorkPeer.html#method-i-add","(address:, port:)",""],["all","Nanook::Wallet","classes/Nanook/Wallet.html#method-i-all","()",""],["balance","Nanook::Account","classes/Nanook/Account.html#method-i-balance","()","<p>Returns a Hash containing two keys:\n<p><code>:balance</code> - Amount of raw in the account\n<p><code>:pending</code> - Amount of raw pending …\n"],["balance","Nanook::Wallet","classes/Nanook/Wallet.html#method-i-balance","(account_break_down: false)",""],["block","Nanook","classes/Nanook.html#method-i-block","(block=nil)",""],["block_count","Nanook::Node","classes/Nanook/Node.html#method-i-block_count","()",""],["block_count_type","Nanook::Node","classes/Nanook/Node.html#method-i-block_count_type","()",""],["bootstrap","Nanook::Node","classes/Nanook/Node.html#method-i-bootstrap","(address:, port:)",""],["bootstrap_any","Nanook::Node","classes/Nanook/Node.html#method-i-bootstrap_any","()",""],["call","Nanook::Rpc","classes/Nanook/Rpc.html#method-i-call","(action, params={})",""],["cancel_work","Nanook::Block","classes/Nanook/Block.html#method-i-cancel_work","()",""],["chain","Nanook::Block","classes/Nanook/Block.html#method-i-chain","(limit: 1000)",""],["change_password","Nanook::Wallet","classes/Nanook/Wallet.html#method-i-change_password","(password)",""],["clear","Nanook::WorkPeer","classes/Nanook/WorkPeer.html#method-i-clear","()",""],["coerce_empty_string_to_type","Nanook::Util","classes/Nanook/Util.html#method-c-coerce_empty_string_to_type","(response, type)",""],["contains?","Nanook::Wallet","classes/Nanook/Wallet.html#method-i-contains-3F","(account)",""],["create","Nanook::Wallet","classes/Nanook/Wallet.html#method-i-create","()",""],["create","Nanook::WalletAccount","classes/Nanook/WalletAccount.html#method-i-create","()",""],["delegators","Nanook::Account","classes/Nanook/Account.html#method-i-delegators","()","<p>Example response\n\n<pre><code>{\n  &quot;xrb_13bqhi1cdqq8yb9szneoc38qk899d58i5rcrgdk5mkdm86hekpoez3zxw5sd&quot;: &quot;500000000000000000000000000000000000&quot;, ...\n</code></pre>\n"],["destroy","Nanook::Wallet","classes/Nanook/Wallet.html#method-i-destroy","()",""],["destroy","Nanook::WalletAccount","classes/Nanook/WalletAccount.html#method-i-destroy","()",""],["exists?","Nanook::Account","classes/Nanook/Account.html#method-i-exists-3F","()","<p>Return boolean indicating if account is valid\n"],["export","Nanook::Wallet","classes/Nanook/Wallet.html#method-i-export","()","<p>Returns string of JSON\n"],["frontier_count","Nanook::Node","classes/Nanook/Node.html#method-i-frontier_count","()",""],["generate","Nanook::Key","classes/Nanook/Key.html#method-i-generate","(seed: nil, index: nil)",""],["generate_work","Nanook::Block","classes/Nanook/Block.html#method-i-generate_work","()",""],["history","Nanook::Account","classes/Nanook/Account.html#method-i-history","(limit: 1000)",""],["history","Nanook::Block","classes/Nanook/Block.html#method-i-history","(limit: 1000)",""],["info","Nanook::Account","classes/Nanook/Account.html#method-i-info","()",""],["info","Nanook::Block","classes/Nanook/Block.html#method-i-info","(allow_unchecked: false)",""],["info","Nanook::Key","classes/Nanook/Key.html#method-i-info","()",""],["is_valid_work?","Nanook::Block","classes/Nanook/Block.html#method-i-is_valid_work-3F","(work)",""],["key","Nanook","classes/Nanook.html#method-i-key","(key=nil)",""],["ledger","Nanook::Account","classes/Nanook/Account.html#method-i-ledger","(limit: 1)",""],["list","Nanook::WorkPeer","classes/Nanook/WorkPeer.html#method-i-list","()",""],["locked?","Nanook::Wallet","classes/Nanook/Wallet.html#method-i-locked-3F","()",""],["method_missing","Nanook::WalletAccount","classes/Nanook/WalletAccount.html#method-i-method_missing","(m, *args, &block)","<p>Any method of Nanook::Account can be called on this class too\n"],["new","Nanook","classes/Nanook.html#method-c-new","(uri=Nanook::Rpc::DEFAULT_URI, timeout:Nanook::Rpc::DEFAULT_TIMEOUT)","<p>Arguments\n<p><code>uri</code> - RPC host to connect to (default is “localhost:7076”)\n<p><code>timeout:</code> - Connection timeout …\n"],["new","Nanook::Account","classes/Nanook/Account.html#method-c-new","(rpc, account)",""],["new","Nanook::Block","classes/Nanook/Block.html#method-c-new","(rpc, block)",""],["new","Nanook::Key","classes/Nanook/Key.html#method-c-new","(rpc, key=nil)",""],["new","Nanook::Node","classes/Nanook/Node.html#method-c-new","(rpc)",""],["new","Nanook::Rpc","classes/Nanook/Rpc.html#method-c-new","(uri=DEFAULT_URI, timeout:DEFAULT_TIMEOUT)",""],["new","Nanook::Wallet","classes/Nanook/Wallet.html#method-c-new","(rpc, wallet)",""],["new","Nanook::WalletAccount","classes/Nanook/WalletAccount.html#method-c-new","(rpc, wallet, account)",""],["new","Nanook::WorkPeer","classes/Nanook/WorkPeer.html#method-c-new","(rpc)",""],["node","Nanook","classes/Nanook.html#method-i-node","()",""],["pay","Nanook::Wallet","classes/Nanook/Wallet.html#method-i-pay","(from:, to:, amount:, id:)",""],["pay","Nanook::WalletAccount","classes/Nanook/WalletAccount.html#method-i-pay","(to:, amount:, id:)",""],["peers","Nanook::Node","classes/Nanook/Node.html#method-i-peers","()",""],["pending","Nanook::Account","classes/Nanook/Account.html#method-i-pending","(limit: 1000, detailed: false)","<p>Returns Array of block hashes Or, with detailed: true, returns Hashes\n"],["pending?","Nanook::Block","classes/Nanook/Block.html#method-i-pending-3F","()",""],["process","Nanook::Block","classes/Nanook/Block.html#method-i-process","()",""],["public_key","Nanook::Account","classes/Nanook/Account.html#method-i-public_key","()",""],["receive","Nanook::Wallet","classes/Nanook/Wallet.html#method-i-receive","(block=nil, into:)",""],["receive","Nanook::WalletAccount","classes/Nanook/WalletAccount.html#method-i-receive","(block=nil)","<p>Returns false if no block to receive\n"],["representative","Nanook::Account","classes/Nanook/Account.html#method-i-representative","()",""],["representatives","Nanook::Node","classes/Nanook/Node.html#method-i-representatives","()",""],["republish","Nanook::Block","classes/Nanook/Block.html#method-i-republish","(destinations:nil, sources:nil)",""],["stop","Nanook::Node","classes/Nanook/Node.html#method-i-stop","()",""],["successors","Nanook::Block","classes/Nanook/Block.html#method-i-successors","(limit: 1000)",""],["sync_progress","Nanook::Node","classes/Nanook/Node.html#method-i-sync_progress","()",""],["synced?","Nanook::Node","classes/Nanook/Node.html#method-i-synced-3F","()",""],["unlock","Nanook::Wallet","classes/Nanook/Wallet.html#method-i-unlock","(password)",""],["version","Nanook::Node","classes/Nanook/Node.html#method-i-version","()",""],["wallet","Nanook","classes/Nanook.html#method-i-wallet","(wallet=nil)",""],["weight","Nanook::Account","classes/Nanook/Account.html#method-i-weight","()",""],["work_peers","Nanook","classes/Nanook.html#method-i-work_peers","()",""],["README","","files/README_md.html","","<p>Nanook\n<p>This is a Ruby library for managing a nano currency node, including making\nand receiving payments, …\n"]]}}